// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pizzeria;

#nullable disable

namespace Pizzeria.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pizzeria.Models.Filling", b =>
                {
                    b.Property<string>("IdFilling")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameFilling")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriceFilling")
                        .HasColumnType("int");

                    b.HasKey("IdFilling");

                    b.ToTable("Fillings");
                });

            modelBuilder.Entity("Pizzeria.Models.Pizza", b =>
                {
                    b.Property<string>("IDPizza")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDSauce")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PizzaImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PizzaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PizzaPrice")
                        .HasColumnType("float");

                    b.HasKey("IDPizza");

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("Pizzeria.Models.Sauce", b =>
                {
                    b.Property<string>("IDSauce")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameSauce")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriceSause")
                        .HasColumnType("int");

                    b.HasKey("IDSauce");

                    b.ToTable("Sauces");
                });

            modelBuilder.Entity("Pizzeria.Models.User", b =>
                {
                    b.Property<string>("IDUser")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDUser");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Pizzeria.Models.Worker", b =>
                {
                    b.Property<string>("IDWorker")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WorkerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkerPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkerSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDWorker");

                    b.ToTable("Workers");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Pizzeria.Models.Cocker", b =>
                {
                    b.HasBaseType("Pizzeria.Models.Worker");

                    b.Property<int>("ExperienceYears")
                        .HasColumnType("int");

                    b.Property<bool>("HasFoodSafetyTraining")
                        .HasColumnType("bit");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Cockers");
                });

            modelBuilder.Entity("Pizzeria.Models.Director", b =>
                {
                    b.HasBaseType("Pizzeria.Models.Worker");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasLeadershipExperience")
                        .HasColumnType("bit");

                    b.ToTable("Directors");
                });

            modelBuilder.Entity("Pizzeria.Models.Manager", b =>
                {
                    b.HasBaseType("Pizzeria.Models.Worker");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasLeadershipTraining")
                        .HasColumnType("bit");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("Pizzeria.Models.Cocker", b =>
                {
                    b.HasOne("Pizzeria.Models.Worker", null)
                        .WithOne()
                        .HasForeignKey("Pizzeria.Models.Cocker", "IDWorker")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pizzeria.Models.Director", b =>
                {
                    b.HasOne("Pizzeria.Models.Worker", null)
                        .WithOne()
                        .HasForeignKey("Pizzeria.Models.Director", "IDWorker")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pizzeria.Models.Manager", b =>
                {
                    b.HasOne("Pizzeria.Models.Worker", null)
                        .WithOne()
                        .HasForeignKey("Pizzeria.Models.Manager", "IDWorker")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
